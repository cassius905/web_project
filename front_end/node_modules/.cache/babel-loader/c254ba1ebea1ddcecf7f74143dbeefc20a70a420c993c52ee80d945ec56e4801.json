{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\project\\\\web_practice\\\\front_end\\\\src\\\\pages\\\\communityPage\\\\CommunityWrite.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './CommunityWrite.module.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommunityWrite = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const handlePublish = () => {\n    if (!title.trim() || !content.trim()) {\n      alert('제목과 내용을 모두 입력해주세요.');\n      return;\n    }\n    // 게시글 등록 로직을 여기에 추가합니다.\n    // 예: 서버로 title과 content를 전송\n    const sendData = {\n      'title': title,\n      'content': content\n    };\n    try {\n      const response = axios.post('http://127.0.0.1:8000/write', sendData);\n    } catch (err) {\n      console.log(err);\n    }\n    console.log({\n      title,\n      content\n    });\n    alert('게시글이 등록되었습니다.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"title-input\",\n        placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"content-textarea\",\n        placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cancel-button\",\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"publish-button\",\n        onClick: handlePublish,\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunityWrite, \"OTvljkGZ3oDHjpEqZRGoAyVoe2c=\");\n_c = CommunityWrite;\nexport default CommunityWrite;\nvar _c;\n$RefreshReg$(_c, \"CommunityWrite\");","map":{"version":3,"names":["React","useState","styles","axios","jsxDEV","_jsxDEV","CommunityWrite","_s","title","setTitle","content","setContent","handlePublish","trim","alert","sendData","response","post","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/project/web_practice/front_end/src/pages/communityPage/CommunityWrite.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './CommunityWrite.module.css' \r\nimport axios from 'axios';\r\n\r\nconst CommunityWrite = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n\r\n  const handlePublish = () => {\r\n    if (!title.trim() || !content.trim()) {\r\n      alert('제목과 내용을 모두 입력해주세요.');\r\n      return;\r\n    }\r\n    // 게시글 등록 로직을 여기에 추가합니다.\r\n    // 예: 서버로 title과 content를 전송\r\n    const sendData = {\r\n      'title' : title,\r\n      'content' : content\r\n    }\r\n    try{\r\n      const response = axios.post('http://127.0.0.1:8000/write',sendData);\r\n    }catch(err){\r\n      console.log(err);\r\n    }\r\n\r\n    console.log({ title, content });\r\n    alert('게시글이 등록되었습니다.');\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor-container\">\r\n      <div className=\"editor-header\">\r\n        <h1>게시글 작성</h1>\r\n      </div>\r\n      <div className=\"editor-body\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"title-input\"\r\n          placeholder=\"제목을 입력하세요\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <textarea\r\n          className=\"content-textarea\"\r\n          placeholder=\"내용을 입력하세요\"\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        ></textarea>\r\n      </div>\r\n      <div className=\"editor-footer\">\r\n        <button className=\"cancel-button\">취소</button>\r\n        <button className=\"publish-button\" onClick={handlePublish}>\r\n          등록\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityWrite;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}