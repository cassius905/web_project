{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\project\\\\web_practice\\\\front_end\\\\src\\\\pages\\\\Join.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport './Join.css'; // CSS 파일을 불러옵니다.\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Join = () => {\n  _s();\n  // 폼 데이터 상태\n  const [formData, setFormData] = useState({\n    nickName: '',\n    userName: '',\n    password: '',\n    passwordConfirm: '',\n    email: ''\n  });\n  const navigate = useNavigate();\n\n  // 유효성 검사 오류 메시지 상태\n  const [errors, setErrors] = useState({});\n\n  // 아이디 중복 확인 상태 ( 'idle' | 'checking' | 'duplicate' | 'available' )\n  const [idCheckStatus, setIdCheckStatus] = useState('idle');\n\n  // 아이디 중복 확인 상태 ( 'idle' | 'checking' | 'duplicate' | 'available' )\n  const [nickCheckStatus, setNickCheckStatus] = useState('idle');\n\n  // 입력 필드 변경 시 호출되는 함수\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [id]: value\n    });\n  };\n  const handleChange2 = e => {\n    const {\n      nick,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [nick]: value\n    });\n  };\n\n  // 필드의 포커스가 해제될 때 유효성 검사 실행 (아이디 제외)\n  const handleBlur = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    if (id !== 'userName') {\n      validateField(id, value);\n    }\n  };\n  const handleBlur2 = e => {\n    const {\n      nick,\n      value\n    } = e.target;\n    if (nick !== 'nickName') {\n      validateField(nick, value);\n    }\n  };\n  const {\n    userName\n  } = formData;\n  const {\n    nickName\n  } = formData;\n  // userName이 변경될 때마다 디바운싱을 통해 유효성 및 중복 검사 실행\n  useEffect(() => {\n    const idRegex = /^[a-z0-9_-]{5,20}$/;\n\n    // 아이디 중복 검사 API 호출 함수\n    const checkIdDuplication = async (username, nickname) => {\n      setIdCheckStatus('checking'); // 확인 중 상태로 변경\n      setNickCheckStatus('checking');\n      try {\n        // FastAPI의 API 경로를 /check-id로 가정합니다.\n        const response = await axios.post('http://127.0.0.1:8000/checkid', {\n          username\n        });\n        if (response.data.isDuplicate) {\n          setIdCheckStatus('duplicate'); // 중복 상태\n        } else {\n          setIdCheckStatus('available'); // 사용 가능 상태\n        }\n      } catch (err) {\n        console.error(\"ID 중복 확인 오류:\", err);\n        // alert(\"아이디 중복 확인 중 오류가 발생했습니다.\"); // 사용자 경험을 위해 alert 대신 메시지로 표시\n        setErrors(prev => ({\n          ...prev,\n          userName: '중복 확인 중 오류 발생'\n        }));\n        setIdCheckStatus('idle'); // 오류 발생 시 초기 상태로\n      }\n      try {\n        // FastAPI의 API 경로를 /check-id로 가정합니다.\n        const response = await axios.post('http://127.0.0.1:8000/checknick', {\n          nickname\n        });\n        if (response.data.isDuplicate) {\n          setNickCheckStatus('duplicate'); // 중복 상태\n        } else {\n          setNickCheckStatus('available'); // 사용 가능 상태\n        }\n      } catch (err) {\n        console.error(\"NICK 중복 확인 오류:\", err);\n        // alert(\"아이디 중복 확인 중 오류가 발생했습니다.\"); // 사용자 경험을 위해 alert 대신 메시지로 표시\n        setErrors(prev => ({\n          ...prev,\n          nickName: '중복 확인 중 오류 발생'\n        }));\n        setNickCheckStatus('idle'); // 오류 발생 시 초기 상태로\n      }\n    };\n\n    // 사용자가 입력을 멈추면 500ms 후에 실행될 타이머\n    const handler = setTimeout(() => {\n      if (!userName) {\n        setErrors(prev => ({\n          ...prev,\n          userName: ''\n        }));\n        setIdCheckStatus('idle');\n        return;\n      }\n      if (!nickName) {\n        setErrors(prev => ({\n          ...prev,\n          nickName: ''\n        }));\n        setNickCheckStatus('idle');\n        return;\n      }\n\n      // 1. 형식 유효성 검사\n      if (!idRegex.test(userName)) {\n        setErrors(prev => ({\n          ...prev,\n          userName: '5~20자의 영문 소문자, 숫자와 특수기호(_),(-)만 사용 가능합니다.'\n        }));\n        setIdCheckStatus('idle');\n      } else {\n        // 2. 형식이 맞으면 중복 검사 API 호출\n        setErrors(prev => ({\n          ...prev,\n          userName: ''\n        }));\n        checkIdDuplication(userName);\n      }\n    }, 500); // 500ms 지연\n\n    // 다음 useEffect가 실행되기 전이나 컴포넌트가 언마운트될 때 타이머를 정리\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [userName, nickName]); // formData.userName이 변경될 때만 이 effect를 실행\n\n  // 각 필드에 대한 유효성 검사 로직 (아이디 제외)\n  const validateField = (id, value) => {\n    let newErrors = {\n      ...errors\n    };\n    const pwRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/;\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/i;\n    switch (id) {\n      case 'password':\n        newErrors.password = pwRegex.test(value) ? '' : '8~16자의 영문 대/소문자, 숫자, 특수문자를 사용해 주세요.';\n        if (formData.passwordConfirm && value !== formData.passwordConfirm) {\n          newErrors.passwordConfirm = '비밀번호가 일치하지 않습니다.';\n        } else if (formData.passwordConfirm) {\n          newErrors.passwordConfirm = '';\n        }\n        break;\n      case 'passwordConfirm':\n        newErrors.passwordConfirm = formData.password === value ? '' : '비밀번호가 일치하지 않습니다.';\n        break;\n      case 'email':\n        newErrors.email = value === '' || emailRegex.test(value) ? '' : '이메일 주소가 정확한지 확인해 주세요.';\n        break;\n      default:\n        break;\n    }\n    setErrors(newErrors);\n  };\n\n  // 폼 제출 시 실행될 함수\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (idCheckStatus !== 'available') {\n      alert('아이디를 확인해주세요.');\n      return;\n    }\n    if (nickCheckStatus !== 'available') {\n      alert('닉네임를 확인해주세요.');\n      return;\n    }\n\n    // 제출 전 최종 유효성 검사\n    let hasError = false;\n    Object.keys(errors).forEach(key => {\n      if (errors[key]) hasError = true;\n    });\n    if (hasError || !formData.password || !formData.passwordConfirm) {\n      alert('입력 정보를 다시 확인해주세요.');\n      return;\n    }\n    try {\n      const userData = {\n        username: formData.userName,\n        password: formData.password,\n        email: formData.email,\n        nickname: formData.nickName\n      };\n      const response = await axios.post(\"http://localhost:8000/join\", userData);\n      alert(response.data.message);\n      navigate(\"/joinComplete\"); // 성공 시 메인 페이지로 이동\n    } catch (err) {\n      console.error(\"회원가입 오류:\", err);\n      alert(\"회원가입 처리 중 오류가 발생했습니다.\");\n    }\n  };\n\n  // 가입하기 버튼 활성화/비활성화 로직\n  const isButtonDisabled = !formData.password || !formData.passwordConfirm || Object.values(errors).some(error => error) || idCheckStatus !== 'available' || nickCheckStatus !== 'available';\n\n  // 아이디 필드 아래에 표시될 메시지를 관리하는 컴포넌트\n  const IdFeedback = () => {\n    if (errors.userName) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errors.userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }, this);\n    if (idCheckStatus === 'checking') return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"checking-message\",\n      children: \"\\uD655\\uC778 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 50\n    }, this);\n    if (idCheckStatus === 'duplicate') return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"\\uC774\\uBBF8 \\uC0AC\\uC6A9 \\uC911\\uC778 \\uC544\\uC774\\uB514\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 51\n    }, this);\n    if (idCheckStatus === 'available') return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: \"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uC544\\uC774\\uB514\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 51\n    }, this);\n    return null;\n  };\n  const NickFeedback = () => {\n    if (errors.userName) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errors.nickName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 37\n    }, this);\n    if (idCheckStatus === 'checking') return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"checking-message\",\n      children: \"\\uD655\\uC778 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 50\n    }, this);\n    if (idCheckStatus === 'duplicate') return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"\\uC774\\uBBF8 \\uC0AC\\uC6A9 \\uC911\\uC778 \\uB2C9\\uB124\\uC784\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 51\n    }, this);\n    if (idCheckStatus === 'available') return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success-message\",\n      children: \"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uB2C9\\uB124\\uC784\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 51\n    }, this);\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/join\",\n            children: \"Green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"signupForm\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"NickName\",\n              children: \"\\uB2C9\\uB124\\uC784\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"nickName\",\n              className: \"input-field\",\n              value: formData.nickName,\n              onChange: handleChange2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IdFeedback, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"userName\",\n              children: \"\\uC544\\uC774\\uB514\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"userName\",\n              className: \"input-field\",\n              value: formData.userName,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IdFeedback, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              className: \"input-field\",\n              value: formData.password,\n              onChange: handleChange,\n              onBlur: handleBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"passwordConfirm\",\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uD655\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"passwordConfirm\",\n              className: \"input-field\",\n              value: formData.passwordConfirm,\n              onChange: handleChange,\n              onBlur: handleBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 29\n            }, this), errors.passwordConfirm && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.passwordConfirm\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"\\uBCF8\\uC778 \\uD655\\uC778 \\uC774\\uBA54\\uC77C (\\uC120\\uD0DD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              className: \"input-field\",\n              value: formData.email,\n              onChange: handleChange,\n              onBlur: handleBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"signup-btn\",\n            disabled: isButtonDisabled,\n            children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Join, \"owGCTqPCaYY9g/Dli0NcHKfKHt0=\", false, function () {\n  return [useNavigate];\n});\n_c = Join;\nexport default Join;\nvar _c;\n$RefreshReg$(_c, \"Join\");","map":{"version":3,"names":["useState","useEffect","useNavigate","Link","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Join","_s","formData","setFormData","nickName","userName","password","passwordConfirm","email","navigate","errors","setErrors","idCheckStatus","setIdCheckStatus","nickCheckStatus","setNickCheckStatus","handleChange","e","id","value","target","handleChange2","nick","handleBlur","validateField","handleBlur2","idRegex","checkIdDuplication","username","nickname","response","post","data","isDuplicate","err","console","error","prev","handler","setTimeout","test","clearTimeout","newErrors","pwRegex","emailRegex","handleSubmit","preventDefault","alert","hasError","Object","keys","forEach","key","userData","message","isButtonDisabled","values","some","IdFeedback","className","children","fileName","_jsxFileName","lineNumber","columnNumber","NickFeedback","to","onSubmit","htmlFor","type","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/project/web_practice/front_end/src/pages/Join.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport './Join.css'; // CSS 파일을 불러옵니다.\r\nimport axios from 'axios';\r\n\r\nconst Join = () => {\r\n    // 폼 데이터 상태\r\n    const [formData, setFormData] = useState({\r\n        nickName: '',\r\n        userName: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n        email: ''\r\n    });\r\n    const navigate = useNavigate();\r\n\r\n    // 유효성 검사 오류 메시지 상태\r\n    const [errors, setErrors] = useState({});\r\n    \r\n    // 아이디 중복 확인 상태 ( 'idle' | 'checking' | 'duplicate' | 'available' )\r\n    const [idCheckStatus, setIdCheckStatus] = useState('idle');\r\n\r\n    // 아이디 중복 확인 상태 ( 'idle' | 'checking' | 'duplicate' | 'available' )\r\n    const [nickCheckStatus, setNickCheckStatus] = useState('idle');\r\n\r\n    // 입력 필드 변경 시 호출되는 함수\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target;\r\n        setFormData({ ...formData, [id]: value });\r\n    };\r\n\r\n    const handleChange2 = (e) => {\r\n        const { nick, value } = e.target;\r\n        setFormData({ ...formData, [nick]: value });\r\n    };\r\n    \r\n    // 필드의 포커스가 해제될 때 유효성 검사 실행 (아이디 제외)\r\n    const handleBlur = (e) => {\r\n        const { id, value } = e.target;\r\n        if (id !== 'userName') {\r\n            validateField(id, value);\r\n        }\r\n    };\r\n\r\n    const handleBlur2 = (e) => {\r\n        const { nick, value } = e.target;\r\n        if (nick !== 'nickName') {\r\n            validateField(nick, value);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const { userName } = formData;\r\n    const { nickName } = formData;\r\n    // userName이 변경될 때마다 디바운싱을 통해 유효성 및 중복 검사 실행\r\n    useEffect(() => {\r\n        const idRegex = /^[a-z0-9_-]{5,20}$/;\r\n\r\n        // 아이디 중복 검사 API 호출 함수\r\n        const checkIdDuplication = async (username, nickname) => {\r\n            setIdCheckStatus('checking'); // 확인 중 상태로 변경\r\n            setNickCheckStatus('checking');\r\n            try {\r\n                // FastAPI의 API 경로를 /check-id로 가정합니다.\r\n                const response = await axios.post('http://127.0.0.1:8000/checkid', { username});\r\n                if (response.data.isDuplicate) {\r\n                    setIdCheckStatus('duplicate'); // 중복 상태\r\n                } else {\r\n                    setIdCheckStatus('available'); // 사용 가능 상태\r\n                }\r\n            } catch (err) {\r\n                console.error(\"ID 중복 확인 오류:\", err);\r\n                // alert(\"아이디 중복 확인 중 오류가 발생했습니다.\"); // 사용자 경험을 위해 alert 대신 메시지로 표시\r\n                setErrors(prev => ({ ...prev, userName: '중복 확인 중 오류 발생' }));\r\n                setIdCheckStatus('idle'); // 오류 발생 시 초기 상태로\r\n            }\r\n            try {\r\n                // FastAPI의 API 경로를 /check-id로 가정합니다.\r\n                const response = await axios.post('http://127.0.0.1:8000/checknick', { nickname});\r\n                if (response.data.isDuplicate) {\r\n                    setNickCheckStatus('duplicate'); // 중복 상태\r\n                } else {\r\n                    setNickCheckStatus('available'); // 사용 가능 상태\r\n                }\r\n            } catch (err) {\r\n                console.error(\"NICK 중복 확인 오류:\", err);\r\n                // alert(\"아이디 중복 확인 중 오류가 발생했습니다.\"); // 사용자 경험을 위해 alert 대신 메시지로 표시\r\n                setErrors(prev => ({ ...prev, nickName: '중복 확인 중 오류 발생' }));\r\n                setNickCheckStatus('idle'); // 오류 발생 시 초기 상태로\r\n            }\r\n        };\r\n\r\n\r\n\r\n        // 사용자가 입력을 멈추면 500ms 후에 실행될 타이머\r\n        const handler = setTimeout(() => {\r\n            if (!userName) {\r\n                setErrors(prev => ({ ...prev, userName: '' }));\r\n                setIdCheckStatus('idle');\r\n                return;\r\n            }\r\n\r\n            if (!nickName) {\r\n                setErrors(prev => ({ ...prev, nickName: '' }));\r\n                setNickCheckStatus('idle');\r\n                return;\r\n            }\r\n\r\n            // 1. 형식 유효성 검사\r\n            if (!idRegex.test(userName)) {\r\n                setErrors(prev => ({ ...prev, userName: '5~20자의 영문 소문자, 숫자와 특수기호(_),(-)만 사용 가능합니다.' }));\r\n                setIdCheckStatus('idle');\r\n            } else {\r\n                // 2. 형식이 맞으면 중복 검사 API 호출\r\n                setErrors(prev => ({ ...prev, userName: '' }));\r\n                checkIdDuplication(userName);\r\n            }\r\n        }, 500); // 500ms 지연\r\n\r\n        // 다음 useEffect가 실행되기 전이나 컴포넌트가 언마운트될 때 타이머를 정리\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [userName, nickName]); // formData.userName이 변경될 때만 이 effect를 실행\r\n\r\n    // 각 필드에 대한 유효성 검사 로직 (아이디 제외)\r\n    const validateField = (id, value) => {\r\n        let newErrors = { ...errors };\r\n        const pwRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/;\r\n        const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/i;\r\n\r\n        switch (id) {\r\n            case 'password':\r\n                newErrors.password = pwRegex.test(value) ? '' : '8~16자의 영문 대/소문자, 숫자, 특수문자를 사용해 주세요.';\r\n                if (formData.passwordConfirm && value !== formData.passwordConfirm) {\r\n                    newErrors.passwordConfirm = '비밀번호가 일치하지 않습니다.';\r\n                } else if(formData.passwordConfirm) {\r\n                    newErrors.passwordConfirm = '';\r\n                }\r\n                break;\r\n            case 'passwordConfirm':\r\n                newErrors.passwordConfirm = formData.password === value ? '' : '비밀번호가 일치하지 않습니다.';\r\n                break;\r\n            case 'email':\r\n                newErrors.email = (value === '' || emailRegex.test(value)) ? '' : '이메일 주소가 정확한지 확인해 주세요.';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setErrors(newErrors);\r\n    };\r\n\r\n    // 폼 제출 시 실행될 함수\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (idCheckStatus !== 'available' ) {\r\n            alert('아이디를 확인해주세요.');\r\n            return;\r\n        }\r\n\r\n        if (nickCheckStatus !== 'available' ) {\r\n            alert('닉네임를 확인해주세요.');\r\n            return;\r\n        }\r\n        \r\n        // 제출 전 최종 유효성 검사\r\n        let hasError = false;\r\n        Object.keys(errors).forEach(key => {\r\n            if(errors[key]) hasError = true;\r\n        });\r\n        if (hasError || !formData.password || !formData.passwordConfirm) {\r\n            alert('입력 정보를 다시 확인해주세요.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const userData = {\r\n                username: formData.userName,\r\n                password: formData.password,\r\n                email: formData.email,\r\n                nickname: formData.nickName\r\n            };\r\n            const response = await axios.post(\"http://localhost:8000/join\", userData);\r\n            alert(response.data.message);\r\n            navigate(\"/joinComplete\"); // 성공 시 메인 페이지로 이동\r\n        } catch (err) {\r\n            console.error(\"회원가입 오류:\", err);\r\n            alert(\"회원가입 처리 중 오류가 발생했습니다.\");\r\n        }\r\n    };\r\n\r\n    // 가입하기 버튼 활성화/비활성화 로직\r\n    const isButtonDisabled = \r\n        !formData.password || !formData.passwordConfirm ||\r\n        Object.values(errors).some(error => error) ||\r\n        idCheckStatus !== 'available' ||\r\n        nickCheckStatus !== 'available';\r\n\r\n    // 아이디 필드 아래에 표시될 메시지를 관리하는 컴포넌트\r\n    const IdFeedback = () => {\r\n        if (errors.userName) return <p className=\"error-message\">{errors.userName}</p>;\r\n        if (idCheckStatus === 'checking') return <p className=\"checking-message\">확인 중입니다...</p>;\r\n        if (idCheckStatus === 'duplicate') return <p className=\"error-message\">이미 사용 중인 아이디입니다.</p>;\r\n        if (idCheckStatus === 'available') return <p className=\"success-message\">사용 가능한 아이디입니다.</p>;\r\n        return null;\r\n    };\r\n\r\n    const NickFeedback = () => {\r\n        if (errors.userName) return <p className=\"error-message\">{errors.nickName}</p>;\r\n        if (idCheckStatus === 'checking') return <p className=\"checking-message\">확인 중입니다...</p>;\r\n        if (idCheckStatus === 'duplicate') return <p className=\"error-message\">이미 사용 중인 닉네임입니다.</p>;\r\n        if (idCheckStatus === 'available') return <p className=\"success-message\">사용 가능한 닉네임입니다.</p>;\r\n        return null;\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"signup-wrapper\">\r\n                <div className=\"signup-container\">\r\n                    <h1 className=\"logo\"><Link to=\"/join\">Green</Link></h1>\r\n                    <form id=\"signupForm\" onSubmit={handleSubmit}>\r\n                        \r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"NickName\">닉네임</label>\r\n                            <input type=\"text\" id=\"nickName\" className=\"input-field\" value={formData.nickName} onChange={handleChange2} />\r\n                            <IdFeedback />\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"userName\">아이디</label>\r\n                            <input type=\"text\" id=\"userName\" className=\"input-field\" value={formData.userName} onChange={handleChange} />\r\n                            <IdFeedback />\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"password\">비밀번호</label>\r\n                            <input type=\"password\" id=\"password\" className=\"input-field\" value={formData.password} onChange={handleChange} onBlur={handleBlur} />\r\n                            {errors.password && <p className=\"error-message\">{errors.password}</p>}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"passwordConfirm\">비밀번호 재확인</label>\r\n                            <input type=\"password\" id=\"passwordConfirm\" className=\"input-field\" value={formData.passwordConfirm} onChange={handleChange} onBlur={handleBlur} />\r\n                            {errors.passwordConfirm && <p className=\"error-message\">{errors.passwordConfirm}</p>}\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"email\">본인 확인 이메일 (선택)</label>\r\n                            <input type=\"email\" id=\"email\" className=\"input-field\" value={formData.email} onChange={handleChange} onBlur={handleBlur} />\r\n                            {errors.email && <p className=\"error-message\">{errors.email}</p>}\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"signup-btn\" disabled={isButtonDisabled}>가입하기</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Join;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}