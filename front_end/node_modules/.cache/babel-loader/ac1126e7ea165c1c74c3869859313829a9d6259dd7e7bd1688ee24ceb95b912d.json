{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\react\\\\front_end\\\\src\\\\pages\\\\header.jsx\";\nimport React from 'react';\nimport './header.css';\nimport { Link } from 'react-router-dom';\n\n// App.js로부터 isLoggedIn, username, onLogout 함수를 props로 받습니다.\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  isLoggedIn,\n  username,\n  onLogout\n}) => {\n  const handleRefresh = e => {\n    // a 태그의 기본 동작(페이지 상단으로 이동)을 막습니다.\n    e.preventDefault();\n    // 페이지를 강제로 새로고침합니다.\n    window.location.reload();\n  };\n  console.log('로그인 했는가?', isLoggedIn);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.location.reload(),\n            children: \"Green Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-menu\",\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [username, \"\\uB2D8 \\uD658\\uC601\\uD569\\uB2C8\\uB2E4!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onLogout,\n              children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","isLoggedIn","username","onLogout","handleRefresh","e","preventDefault","window","location","reload","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","href","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/react/front_end/src/pages/header.jsx"],"sourcesContent":["import React from 'react';\r\nimport './header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// App.js로부터 isLoggedIn, username, onLogout 함수를 props로 받습니다.\r\nconst Header = ({ isLoggedIn, username, onLogout }) => {\r\n\r\n    const handleRefresh = (e) => {\r\n    // a 태그의 기본 동작(페이지 상단으로 이동)을 막습니다.\r\n    e.preventDefault(); \r\n    // 페이지를 강제로 새로고침합니다.\r\n    window.location.reload();\r\n    };\r\n\r\n\r\n    console.log('로그인 했는가?',isLoggedIn)\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1>\r\n                    <h2><button onClick={() => window.location.reload()}>Green Search</button></h2>\r\n                </h1>\r\n                <div className=\"user-menu\">\r\n                    {isLoggedIn? (\r\n                        <>\r\n                            <span>{username}님 환영합니다!</span>\r\n                            <a href=\"/\"><button onClick={onLogout}>로그아웃</button></a>\r\n                        </>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </div>\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,MAAM,GAAGA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAEnD,MAAMC,aAAa,GAAIC,CAAC,IAAK;IAC7B;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EACxB,CAAC;EAGDC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACV,UAAU,CAAC;EAClC,oBACIJ,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACIf,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAAe,QAAA,eACIf,OAAA;UAAAe,QAAA,eAAIf,OAAA;YAAQgB,OAAO,EAAEA,CAAA,KAAMN,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE;YAAAG,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACLpB,OAAA;QAAKqB,SAAS,EAAC,WAAW;QAAAN,QAAA,EACrBX,UAAU,gBACPJ,OAAA,CAAAE,SAAA;UAAAa,QAAA,gBACIf,OAAA;YAAAe,QAAA,GAAOV,QAAQ,EAAC,wCAAQ;UAAA;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/BpB,OAAA;YAAGsB,IAAI,EAAC,GAAG;YAAAP,QAAA,eAACf,OAAA;cAAQgB,OAAO,EAAEV,QAAS;cAAAS,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,eAC1D,CAAC,gBAEHpB,OAAA,CAAAE,SAAA,mBAAI;MACP;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACX,CAAC;AAEX,CAAC;AAACG,EAAA,GA9BIpB,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}